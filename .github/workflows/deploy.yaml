name: Deploy to AKS

on:
  push:
    branches:
      - main # 当代码推送到 main 分支时触发此工作流

env:
  AZURE_RESOURCE_GROUP: art-portfolio-rg      # <-- 资源组名
  AKS_CLUSTER_NAME: tech-art-portfolio      # <-- AKS 集群名
  DOCKER_IMAGE_NAME: tech-portfolio-demo   # <-- Docker 镜像名 (不含用户名和标签)
  DOCKER_IMAGE_TAG: v1.0.1                # <-- 镜像标签 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 使用 GitHub 提供的最新 Ubuntu 虚拟机作为运行环境

    steps:
    - name: Checkout code # 步骤1: 检查代码到工作目录
      uses: actions/checkout@v4

    - name: Set up Docker Buildx # 步骤2: 设置 Docker Buildx 环境，支持多平台构建
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub # 步骤3: 登录 Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker image # 步骤4: 构建并推送到 Docker Hub
      run: |
        docker buildx build --platform linux/amd64 -t ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} . --push

    - name: Login to Azure # 步骤5: 登录 Azure
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }} # 使用之前设置的 AZURE_CREDENTIALS Secret

    - name: Get Kubeconfig for AKS # 步骤6: 获取 AKS 集群的 Kubeconfig
      uses: azure/aks-get-credentials@v1
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        admin: 'true' # 获取管理员凭据

    - name: Deploy to Kubernetes # 步骤7: 应用 Kubernetes 配置
      run: 
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml